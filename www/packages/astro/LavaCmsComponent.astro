---
/* eslint-disable @typescript-eslint/no-unsafe-argument */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-return */
/* eslint-disable @typescript-eslint/restrict-template-expressions */

// @ts-expect-error - virtual modules don't have types
import astroComponents from "virtual:lavacms-components";
import camelcase from "camelcase";
import type { AstroComponentFactory } from "astro/dist/runtime/server";
import type { LavaCmsComponent } from "@lavacms/core";

interface Props {
	component: LavaCmsComponent;
}

const { component: cmsComponent } = Astro.props;
if (!cmsComponent) {
	throw new Error("No component data provided to `LavaCmsComponent` Astro component");
}
if (typeof cmsComponent.name !== "string") {
	throw new Error(
		`The CMS component you passed to \`LavaCmsComponent\` is invalid:\n${JSON.stringify(
			cmsComponent,
			null,
			2
		)}`
	);
}

const name = camelcase(cmsComponent.name);
let Comp: AstroComponentFactory;

if (name in astroComponents) {
	Comp = astroComponents[name];
} else {
	console.warn(`Component '${cmsComponent.name}' not defined in adapter config`);
	return;
}
---

<Comp cms={cmsComponent.data} />
