---
/* eslint-disable @typescript-eslint/no-unsafe-argument */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-return */

// @ts-expect-error - virtual modules don't have types
import astroComponents from "virtual:lavacms-components";
import type { LavaCmsComponentList, LavaCmsComponentData } from "@lavacms/core";
import type { AstroComponentFactory } from "astro/dist/runtime/server";
import camelcase from "camelcase";

interface Props {
	components: LavaCmsComponentList;
}

const { components: cmsComponents } = Astro.props;
if (!cmsComponents) {
	throw new Error("No page data provided to `LavaCmsPage` Astro component");
}

const components: Array<{ astroComponent: AstroComponentFactory; cmsData: LavaCmsComponentData }> =
	[];
for (const cmsComponent of cmsComponents) {
	const name = camelcase(cmsComponent.name);

	if (Object.keys(astroComponents).includes(name)) {
		const astroComponent: AstroComponentFactory = astroComponents[name];
		const cmsData = cmsComponent.component;
		components.push({ astroComponent, cmsData });
	} else {
		console.warn(`Component ${name} not found`);
	}
}
---

{
	components.map(({ astroComponent: Comp, cmsData: data }) => {
		return <Comp cms={data} />;
	})
}
